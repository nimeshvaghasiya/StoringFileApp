extends layout
.container
      .jumbotron
        h1 Download File
        |             
        .form-group
          // <label for="fileUrl">Url</label>
          input#fileUrl.form-control(type='text', placeholder='Url')
        |             
        button.btn.btn-success(type='button', onclick='download();') Download
    |     
    script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js')
    |     
    script(src='https://cdnjs.cloudflare.com/ajax/libs/tether/1.4.0/js/tether.min.js')
    |     
    script(src='https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.0.0-alpha.6/js/bootstrap.min.js')
    |     
    script(type='text/javascript').
      $(function () {
      $('#fileUrl').val('https://cdnjs.cloudflare.com/ajax/libs/jquery/3.2.1/jquery.min.js'); //'https://bitcoin.org/bitcoin.pdf'
      });
      function download() {
      try {
      var url = $('#fileUrl').val(); //https://bitcoin.org/bitcoin.pdf
      var urlPattern = /^((http[s]?|ftp):\\/)?\/?([^:\/\s]+)((\/\w+)*\/)([\w\-\.]+[^#?\s]+)(.*)?(#[\w\-]+)?$/;
      var regex = new RegExp(urlPattern);
      if (url.match(regex)) {
      var xhr = createCORSRequest('GET', url);
      //xhr.responseType = 'blob';
      //xhr.setRequestHeader("Content-type", "octet/stream");
      if (!xhr) {
      alert('CORS not supported');
      return;
      }
      // Response handlers.
      xhr.onload = function () {
      var blob = new Blob([xhr.response], { type: "octet/stream" });
      //var file = URL.createObjectURL(blob);
      var reader = new window.FileReader();
      reader.readAsDataURL(blob);
      reader.onloadend = function () {
      var base64data = reader.result;
      console.log(base64data);
      }
      };
      xhr.onerror = function () {
      alert('Woops, there was an error making the request.');
      };
      xhr.send();
      }
      else {
      alert('please enter valid url.');
      $('#fileUrl').focus();
      }
      } catch (e) {
      console.log(e);
      }
      }
      // Create the XHR object.
      function createCORSRequest(method, url) {
      var xhr = new XMLHttpRequest();
      if ("withCredentials" in xhr) {
      // XHR for Chrome/Firefox/Opera/Safari.
      xhr.open(method, url, true);
      } else if (typeof XDomainRequest != "undefined") {
      // XDomainRequest for IE.
      xhr = new XDomainRequest();
      xhr.open(method, url);
      } else {
      // CORS not supported.
      xhr = null;
      }
      return xhr;
      }
